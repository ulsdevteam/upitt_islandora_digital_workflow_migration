<?php

set_time_limit(0);

global $drupal_uids;
global $idw_islandora_model_mapping;
$drupal_uids = array(
  "abrenner@pitt.edu" =>53,
  "akg45@pitt.edu" =>481,
  "alexjtoner@pitt.edu" =>89110,
  "alt64@pitt.edu" =>64816,
  "ASW76@pitt.edu" =>88956,
  "bdgregg@pitt.edu" =>38,
  "btr9@pitt.edu" =>89111,
  "CHL291@pitt.edu" =>89112,
  "chs187@pitt.edu" =>686,
  "ctgraham@pitt.edu" =>135,
  "cwithers@pitt.edu" =>89113,
  "delvon.anderson@pitt.edu" =>44,
  "des125@pitt.edu" =>61,
  "discovery@discoverygarden.ca" =>56,
  "edwardg@pitt.edu" =>164,
  "esoward@pitt.edu" =>122,
  "grinnell@pitt.edu" =>89114,
  "heidicard@pitt.edu" =>482,
  "hek33@pitt.edu" =>740,
  "HOK14@pitt.edu" =>64811,
  "jeanann@pitt.edu" =>89115,
  "jeffw@pitt.edu" =>134,
  "JEK176@pitt.edu" =>64812,
  "jmp171@pitt.edu" =>125,
  "k.johnston@pitt.edu" =>128,
  "KARIMAY@pitt.edu" =>88954,
  "kiarna@pitt.edu" =>483,
  "kmd106@pitt.edu" =>89116,
  "kmill@pitt.edu" =>89117,
  "kristin.britanik@pitt.edu" =>78366,
  "laurabrooks@pitt.edu" =>239,
  "LINDAN@pitt.edu" =>4229,
  "lugar@pitt.edu" =>89118,
  "mam687@pitt.edu" =>89119,
  "miriam@pitt.edu" =>89120,
  "mjj@pitt.edu" =>484,
  "mpmcgill@pitt.edu" =>89121,
  "mrbst20@pitt.edu" =>58,
  "nwatson@pitt.edu" =>89122,
  "rlh52@pitt.edu" =>131,
  "STR51@pitt.edu" =>741,
  "tarka@pitt.edu" =>485,
  "tsd@pitt.edu" =>486,
  "tyt3@pitt.edu" =>89249,
  "uls-systemsdevelopment@mail.pitt.edu" =>1,
  "uls-systemsdevelopment@pitt.edu" =>768,
  "ulssdstu@pitt.edu" =>240,
  "wgillingham@pitt.edu" =>235,
  "williamdaw@pitt.edu" =>89123,
  "zlb2@pitt.edu" =>250
);
$idw_islandora_model_mapping = array(
  1 => 'manuscriptCModel',
  2 => 'sp_large_image_cmodel',
  3 => 'bookCModel',            // text - cataloged
  4 => 'bookCModel',            // text - uncataloged
  5 => 'sp_large_image_cmodel', // map
  6 => 'sp_pdf',
  7 => 'sp_large_image_cmodel', // georeferenced map
  8 => 'newspaperIssueCModel',  // newspaper - cataloged
);

define('CST_TEMP_MESSAGE_FILE', '/tmp/upitt_islandora_digital_workflow_migration_message');
define('CST_DELIVERY_ROOT', '/ingest/dlxs/repository/');

// This module relies on some database functions that are in the code for
// upitt_workflow.module.
module_load_include('module', 'upitt_workflow', 'upitt_workflow');

/**
 * Implements hook_menu().
 */
function upitt_islandora_digital_workflow_migration_menu() {
  $items = array(
    'admin/islandora/upitt_islandora_digital_workflow_migration' => array(
      'title' => t('University of Pittsburgh - Migrate from DRL django to Islandora Digital Workflow'),
      'description' => 'Migrate records from legacy DRL django system to the Islandora Digital Workflow system.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_islandora_digital_workflow_migration_show_possible'),
      'access arguments' => array('administer site configuration'),
    ),
    'admin/islandora/upitt_islandora_digital_workflow_migration/migrate/%' => array(
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_islandora_digital_workflow_migration_migrate_batches', 4),
      'access arguments' => array('administer site configuration'),
    )
  );

  return $items;
}

/**
 * Implements hook_theme()
 */
function upitt_islandora_digital_workflow_migration_theme() {
  return array(
    'upitt_islandora_digital_workflow_record' => array(
      'variables' => array(
        'row' => array(),
        'title' => '',
        'extra_content' => '',
        'class' => '',
      ),
      'template' => 'theme/upitt-islandora-digital-workflow-record'
    ),
  );
}

/**
 * Implements hook_preprocess_page().
 *
 * This code will include the CSS only for the paths that apply to the module itself.
 */
function upitt_islandora_digital_workflow_migration_preprocess_page(&$vars) {
  $path = drupal_get_path('module', 'upitt_islandora_digital_workflow_migration');
  $item = menu_get_item();
  if (is_array($item)) {
    if ($item['path'] == 'admin/islandora/upitt_islandora_digital_workflow_migration' ||
        $item['path'] == 'admin/islandora/upitt_islandora_digital_workflow_migration/migrate/%') {
      drupal_add_css($path . '/style/styles.css');
    }
  }
}

/**
 * Main function to display the possible batches for migration.
 *
 * @param array $form
 *   The Drupal form definition.
 * @param array $form_state
 *   The Drupal form state.
 * @return array
 *   A Drupal form definition.
 */
function upitt_islandora_digital_workflow_migration_show_possible(array $form, array &$form_state) {
  module_load_include('inc', 'upitt_islandora_digital_workflow_migration', 'includes/db');
  if (file_exists(CST_TEMP_MESSAGE_FILE)) {
    $file_contents = file_get_contents(CST_TEMP_MESSAGE_FILE);
    drupal_set_message($file_contents);
    @unlink(CST_TEMP_MESSAGE_FILE);
  }

  $form = array();
  $include_filter = (array_key_exists('include_filter', $_POST) ? trim($_POST['include_filter']) : @$_SESSION['include_filter']);
  $exclude_filter = (array_key_exists('exclude_filter', $_POST) ? trim($_POST['exclude_filter']) : @$_SESSION['exclude_filter']);
  $delete_existing_records = (array_key_exists('delete_existing_records', $_POST) ? $_POST['delete_existing_records'] : @$_SESSION['delete_existing_records']);
  $_SESSION['include_filter'] = $include_filter;
  $_SESSION['exclude_filter'] = $exclude_filter;
  $_SESSION['delete_existing_records'] = $delete_existing_records;
  $possible_batches = upitt_islandora_digital_workflow_migration_get_batches($include_filter, $exclude_filter);
  $total_items =0;
  $links = $l = array();
  foreach ($possible_batches as $possible_batch) {
    $total_items += $possible_batch['items count'];
    $l[] = l($possible_batch['name'], 'admin/islandora/upitt_islandora_digital_workflow_migration/migrate/' . $possible_batch['name']) . ' <b>' . number_format($possible_batch['items count']) . ' items</b>';
  }

  $links[] = l('All', 'admin/islandora/upitt_islandora_digital_workflow_migration/migrate/all') . ' <b>' . number_format($total_items) . ' items</b><hr>';

  $links = array_merge($links, $l);
  $form = array(
    'include_filter' => array(
      '#type' => 'textfield',
      '#title' => 'Include Filter',
      '#description' => t('When set, all results will match this filter in their batch.name value will be displayed.  <b>NOTE:</b> Using a "*" character would represent a wildcard match at that location which must be either at the beginning and/or end of filter value.'),
      '#default_value' => $include_filter,
      '#maxlength' => 50,        
    ),
    'exclude_filter' => array(
      '#type' => 'textfield',
      '#title' => 'Exclude Filter',
      '#description' => t('When set, all results will <b>NOT match</b> the filter value in their batch.name.  <b>NOTE:</b> Using a "*" character would represent a wildcard match at that location which must be either at the beginning and/or end of filter value.'),
      '#default_value' => $exclude_filter,
      '#maxlength' => 50,
    ),
    'delete_existing_records' => array(
      '#type' => 'checkbox',
      '#title' => 'Delete existing Islandora Digital Workflow records?',
      '#description' => 'When set, this will remove any matching `Islandora Digital Workflow` records for each batch as they are migrated.',
      '#default_value' => TRUE,
    ),
    'submit' => array(
      '#type' => 'submit',
      '#value' => t('Filter results'),
    ),
    'reset' => array(
      '#type' => 'submit',
      '#value' => t('Reset form'),
    ),
    'migrate_these' => array(
      '#type' => 'submit',
      '#value' => t('Migrate these batches'),
      '#attributes' => array(
        'style' => array('font-weight: bold'),
      ),
    ),
    'batches' => array(
      '#type' => 'item',
      '#markup' => implode("<br />", $links),
    ),
  );
  $form_state['rebuild'] = TRUE; // needed to pass $form_state back to _form function

  return $form;
}

/**
 * Handle the submission of the filtering on possible batches - user could click
 * either "Migrate these batches" button or a "Filter results" button
 *
 * @param array $form
 *   The Drupal form definition.
 * @param array $form_state
 *   The Drupal form state.
 * @return array
 *   A Drupal form definition.
 */
function upitt_islandora_digital_workflow_migration_show_possible_submit(array $form, array &$form_state) {
  // When the user clicks "Reset form", clear the _SESSION variables - and redirect.
  if ($form_state['triggering_element']['#value'] == t('Reset form')) {
    $_SESSION['include_filter'] = '';
    $_SESSION['exclude_filter'] = '';
    $_SESSION['delete_existing_records'] = FALSE;
    drupal_goto('/admin/islandora/upitt_islandora_digital_workflow_migration');
  }
  // The filtering is displayed and handled in the form code above - since that 
  // is parsing the $_POST superglobal and rebuilding the form.

  // Migrate these
  if ($form_state['triggering_element']['#value'] == t('Migrate these batches')) {
    $include_filter = (array_key_exists('include_filter', $_POST) ? $_POST['include_filter'] : @$_SESSION['include_filter']);
    $exclude_filter = (array_key_exists('exclude_filter', $_POST) ? $_POST['exclude_filter'] : @$_SESSION['exclude_filter']);
    $delete_existing_records = (array_key_exists('delete_existing_records', $_POST) ? $_POST['delete_existing_records'] : @$_SESSION['delete_existing_records']);
    
    $_SESSION['include_filter'] = $include_filter;
    $_SESSION['exclude_filter'] = $exclude_filter;
    $_SESSION['delete_existing_records'] = $delete_existing_records;
    $migrate_batches = upitt_islandora_digital_workflow_migration_get_batches($include_filter, $exclude_filter);
    $output = '';
    foreach ($migrate_batches as $migrate_batch) {
      $output .= upitt_islandora_digital_workflow_migration_migrate_batch($migrate_batch['name'], $delete_existing_records);
    }
    file_put_contents(CST_TEMP_MESSAGE_FILE, $output);
    drupal_goto('/admin/islandora/upitt_islandora_digital_workflow_migration');
  }

  return $form;
}

/**
 * This function will migrate a single batch.  The code iterates through the
 * items related to a batch and all of the transactions related to those items
 * and migrates them all.
 *
 * @param string $batch_name
 *   The identifier field for a batch.
 * @param boolean $delete_existing_records
 *   Whether or not to delete any matching islandora_digital_workflow record
 * before trying to insert it.
 * @return boolean
 *   Whether or not the batch was able to be migrated.
 */
function upitt_islandora_digital_workflow_migration_migrate_batch($batch_name, $delete_existing_records = TRUE) {
  module_load_include('inc', 'upitt_islandora_digital_workflow_migration', 'includes/db');
  $output = '';
  $batch_migrated_count = $item_migrated_count = $transaction_migrated_count = 0;
  if ($batch_name == 'all') {
    $batch_names = upitt_islandora_digital_workflow_migration_get_batches();
    $batch_names = array_keys($batch_names);
  }
  else {
    $batch_names = array($batch_name);
  }
  $j = 1;
  foreach ($batch_names as $batch_name) {
    $output .= '<h3>Migrating batch "' . $batch_name . '"</h3>';
    $django_batch = upitt_islandora_digital_workflow_migration_get_batch($batch_name);
    $added_this_batch = upitt_islandora_digital_workflow_migration_create_batch($django_batch, $delete_existing_records);
    $batch_id = $added_this_batch['batch_id'];
    $batch_migrated_count += (is_array($added_this_batch) ? 1 : 0);
    $output .= theme('upitt_islandora_digital_workflow_record', array(
      'title' => 'Batch [#' . $j . ']',
      'row' => $django_batch,
      'class' => 'indent-1 batch-div'));
    $items = upitt_islandora_digital_workflow_migration_get_batch_item_records($batch_name);
    $items_output = array();
    $tt = 0;
    $i = 1;
    foreach ($items as $item) {
      $added_this_batch_item = upitt_islandora_digital_workflow_migration_create_item($item, $added_this_batch, $django_batch);
      $item_migrated_count += (is_array($added_this_batch_item) ? 1 : 0);
      $transactions = upitt_islandora_digital_workflow_migration_get_transaction_records($item['item_id']);
      $t = $idw_t = 1;
      $transactions_output = '<h3>Django Transactions</h3>';
      $idw_transactions_output = '<hr class="clearfloat" /><h3>Islandora Digital Workflow Transactions</h3>';
      foreach ($transactions as $transaction) {
        $added_this_transaction = upitt_islandora_digital_workflow_migration_create_transaction($transaction, $added_this_batch_item);
        $transaction_migrated_count += (is_array($added_this_transaction) ? 1 : 0);
        $transactions_output .= theme('upitt_islandora_digital_workflow_record', array(
          'title' => 'Transaction [#' . $t . ']',
          'row' => $transaction,
          'class' => 'indent-2' . (is_array($added_this_transaction) ? '' : ' skipped')));
        if (is_array($added_this_transaction)) {
          $idw_transactions_output .= theme('upitt_islandora_digital_workflow_record', array(
            'title' => 'Transaction [#' . $idw_t . ']',
            'row' => $added_this_transaction,
            'class' => 'indent-2 idw'
          ));
          $idw_t++;
        }

        $t++;
      }

      $output .= theme('upitt_islandora_digital_workflow_record', array(
        'title' => 'Item [#' . $i . '] "' . $item['do_id'] . '"',
        'row' => $item,
        'extra_content' => $transactions_output . $idw_transactions_output,
        'class' => 'indent-1'));
      $i++;
      $tt += $t;
    }
    $j++;
  }

  $summary = ($output) ?
    number_format($batch_migrated_count) . ' batches migrated<br>' .
    number_format($item_migrated_count) . ' items migrated<br>' .
    number_format($transaction_migrated_count) . ' of ' .
    number_format($tt) . ' transactions migrated<br>' : '';
  return $summary . $output;
}

function upitt_islandora_digital_workflow_migration_get_islandora_model_from_type_id($type_id) {
  global $idw_islandora_model_mapping;
  return 'islandora:' . (!(array_key_exists($type_id, $idw_islandora_model_mapping) === FALSE)) ?
      $idw_islandora_model_mapping[$type_id] : 'sp_large_image_cmodel';
}

function upitt_islandora_digital_workflow_migration_get_drupal_uid($email) {
  global $drupal_uids;
  return (!(array_key_exists($email, $drupal_uids) === FALSE)) ?
      $drupal_uids[$email] : 0;
}

/**
 * Form to handle a single batch.name - and prompt the user to migrate.
 *
 * This form is linked to by the main "possible batches" routine.... it may be
 * superflous, but provided nonetheless.
 *
 * @param array $form
 *   The Drupal form definition.
 * @param array $form_state
 *   The Drupal form state.
 * @param string $batch_name
 *   The identifier field for a batch.
 * @return array
 *   A Drupal form definition.
 */
function upitt_islandora_digital_workflow_migration_migrate_batches(array $form, array &$form_state, $batch_name = '') {
  $form = array(
    'batchname' => array(
      '#type' => 'item',
      '#markup' => '<b>Migrate ' .
        (($batch_name == 'all') ? 'All Batches' : 'batch "' . $batch_name . '"') . '?</b>',
    ),
    'batch_name' => array(
      '#type' => 'hidden',
      '#default_value' => $batch_name,
    ),
    'delete_existing_records' => array(
      '#type' => 'checkbox',
      '#title' => 'Delete existing Islandora Digital Workflow records?',
      '#description' => 'When set, this will remove any matching `Islandora Digital Workflow` records for each batch as they are migrated.',
      '#default_value' => TRUE,
    ),
    'submit' => array(
      '#type' => 'submit',
      '#value' => t('Migrate batch'),
    ),
    'cancel' => array(
      '#type' => 'submit',
      '#value' => t('Cancel'),
    ),
  );
  return $form;
}

/**
 * Submit handler for migration prompt on a single batch_name.
 *
 * @param array $form
 *   The Drupal form definition.
 * @param array $form_state
 *   The Drupal form state.
 */
function upitt_islandora_digital_workflow_migration_migrate_batches_submit(array $form, array &$form_state) {
  $batch_name = $form['batch_name']['#value'];
  // if the user cancels, send them back to the main page.
  if ($form_state['triggering_element']['#value'] == t('Cancel')) {
    drupal_set_message('Migration cancelled for django batch "' . $batch_name . '".');
    drupal_goto('/admin/islandora/upitt_islandora_digital_workflow_migration');
  }
  $delete_existing_records = $form['delete_existing_records']['#value'];
  if ($output = upitt_islandora_digital_workflow_migration_migrate_batch($batch_name, $delete_existing_records)) {
    file_put_contents(CST_TEMP_MESSAGE_FILE, $output);
    drupal_goto('/admin/islandora/upitt_islandora_digital_workflow_migration');
  }
}
